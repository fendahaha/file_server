<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.file_server.mapper.AnchorMapper">
  <resultMap id="BaseResultMap" type="com.example.file_server.entity.Anchor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_uuid" jdbcType="VARCHAR" property="userUuid" />
    <result column="anchor_uuid" jdbcType="VARCHAR" property="anchorUuid" />
    <result column="anchor_remark" jdbcType="VARCHAR" property="anchorRemark" />
    <result column="anchor_create_at" jdbcType="TIMESTAMP" property="anchorCreateAt" />
    <result column="room_uuid" jdbcType="VARCHAR" property="roomUuid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.file_server.entity.Anchor">
    <result column="anchor_config" jdbcType="LONGVARCHAR" property="anchorConfig" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_uuid, anchor_uuid, anchor_remark, anchor_create_at, room_uuid
  </sql>
  <sql id="Blob_Column_List">
    anchor_config
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.file_server.entity.AnchorExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from anchor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.file_server.entity.AnchorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from anchor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from anchor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from anchor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.file_server.entity.AnchorExample">
    delete from anchor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.file_server.entity.Anchor">
    insert into anchor (id, user_uuid, anchor_uuid, 
      anchor_remark, anchor_create_at, room_uuid, 
      anchor_config)
    values (#{id,jdbcType=INTEGER}, #{userUuid,jdbcType=VARCHAR}, #{anchorUuid,jdbcType=VARCHAR}, 
      #{anchorRemark,jdbcType=VARCHAR}, #{anchorCreateAt,jdbcType=TIMESTAMP}, #{roomUuid,jdbcType=VARCHAR}, 
      #{anchorConfig,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.file_server.entity.Anchor">
    insert into anchor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userUuid != null">
        user_uuid,
      </if>
      <if test="anchorUuid != null">
        anchor_uuid,
      </if>
      <if test="anchorRemark != null">
        anchor_remark,
      </if>
      <if test="anchorCreateAt != null">
        anchor_create_at,
      </if>
      <if test="roomUuid != null">
        room_uuid,
      </if>
      <if test="anchorConfig != null">
        anchor_config,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userUuid != null">
        #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="anchorUuid != null">
        #{anchorUuid,jdbcType=VARCHAR},
      </if>
      <if test="anchorRemark != null">
        #{anchorRemark,jdbcType=VARCHAR},
      </if>
      <if test="anchorCreateAt != null">
        #{anchorCreateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="roomUuid != null">
        #{roomUuid,jdbcType=VARCHAR},
      </if>
      <if test="anchorConfig != null">
        #{anchorConfig,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.file_server.entity.AnchorExample" resultType="java.lang.Long">
    select count(*) from anchor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update anchor
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userUuid != null">
        user_uuid = #{record.userUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.anchorUuid != null">
        anchor_uuid = #{record.anchorUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.anchorRemark != null">
        anchor_remark = #{record.anchorRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.anchorCreateAt != null">
        anchor_create_at = #{record.anchorCreateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.roomUuid != null">
        room_uuid = #{record.roomUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.anchorConfig != null">
        anchor_config = #{record.anchorConfig,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update anchor
    set id = #{record.id,jdbcType=INTEGER},
      user_uuid = #{record.userUuid,jdbcType=VARCHAR},
      anchor_uuid = #{record.anchorUuid,jdbcType=VARCHAR},
      anchor_remark = #{record.anchorRemark,jdbcType=VARCHAR},
      anchor_create_at = #{record.anchorCreateAt,jdbcType=TIMESTAMP},
      room_uuid = #{record.roomUuid,jdbcType=VARCHAR},
      anchor_config = #{record.anchorConfig,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update anchor
    set id = #{record.id,jdbcType=INTEGER},
      user_uuid = #{record.userUuid,jdbcType=VARCHAR},
      anchor_uuid = #{record.anchorUuid,jdbcType=VARCHAR},
      anchor_remark = #{record.anchorRemark,jdbcType=VARCHAR},
      anchor_create_at = #{record.anchorCreateAt,jdbcType=TIMESTAMP},
      room_uuid = #{record.roomUuid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.file_server.entity.Anchor">
    update anchor
    <set>
      <if test="userUuid != null">
        user_uuid = #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="anchorUuid != null">
        anchor_uuid = #{anchorUuid,jdbcType=VARCHAR},
      </if>
      <if test="anchorRemark != null">
        anchor_remark = #{anchorRemark,jdbcType=VARCHAR},
      </if>
      <if test="anchorCreateAt != null">
        anchor_create_at = #{anchorCreateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="roomUuid != null">
        room_uuid = #{roomUuid,jdbcType=VARCHAR},
      </if>
      <if test="anchorConfig != null">
        anchor_config = #{anchorConfig,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.file_server.entity.Anchor">
    update anchor
    set user_uuid = #{userUuid,jdbcType=VARCHAR},
      anchor_uuid = #{anchorUuid,jdbcType=VARCHAR},
      anchor_remark = #{anchorRemark,jdbcType=VARCHAR},
      anchor_create_at = #{anchorCreateAt,jdbcType=TIMESTAMP},
      room_uuid = #{roomUuid,jdbcType=VARCHAR},
      anchor_config = #{anchorConfig,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.file_server.entity.Anchor">
    update anchor
    set user_uuid = #{userUuid,jdbcType=VARCHAR},
      anchor_uuid = #{anchorUuid,jdbcType=VARCHAR},
      anchor_remark = #{anchorRemark,jdbcType=VARCHAR},
      anchor_create_at = #{anchorCreateAt,jdbcType=TIMESTAMP},
      room_uuid = #{roomUuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByExample2" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from anchor
    <if test="_parameter != null and example != null">
      <where>
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                             separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="pageStart != null and pageLimit != null">
      limit #{pageStart},#{pageLimit}
    </if>
  </select>
  <select id="selectByExample3" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    a.id, a.user_uuid, a.anchor_uuid, a.anchor_remark, a.anchor_create_at, a.room_uuid, a.anchor_config
    from anchor a
    left join user as u on a.user_uuid=u.user_uuid
    left join room as r on a.room_uuid= r.room_uuid
    <where>
      <trim prefix="" prefixOverrides="and" suffix="">
        <if test="roomEnable!=null">
          and r.room_enable=#{roomEnable}
        </if>
        <if test="streamType!=null">
          and r.stream_type=#{streamType}
        </if>
        <if test="userName!=null">
          and u.user_name=#{userName}
        </if>
      </trim>
    </where>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageStart != null and pageLimit != null">
      limit #{pageStart},#{pageLimit}
    </if>
  </select>
  <select id="selectCountByExample3" parameterType="map" resultType="int">
    select
    count(*)
    from anchor a
    left join user as u on a.user_uuid=u.user_uuid
    left join room as r on a.room_uuid= r.room_uuid
    <where>
      <trim prefix="" prefixOverrides="and" suffix="">
        <if test="roomEnable!=null">
          and r.room_enable=#{roomEnable}
        </if>
        <if test="streamType!=null">
          and r.stream_type=#{streamType}
        </if>
        <if test="userName!=null">
          and u.user_name=#{userName}
        </if>
      </trim>
    </where>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.file_server.mapper.UploadFileMapper">
  <resultMap id="BaseResultMap" type="com.example.file_server.entity.UploadFile">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="file_unique_name" jdbcType="VARCHAR" property="fileUniqueName" />
    <result column="file_original_name" jdbcType="VARCHAR" property="fileOriginalName" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_tags" jdbcType="VARCHAR" property="fileTags" />
    <result column="file_category" jdbcType="VARCHAR" property="fileCategory" />
    <result column="file_upload_date" jdbcType="TIMESTAMP" property="fileUploadDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, file_unique_name, file_original_name, file_size, file_type, file_path, file_tags, 
    file_category, file_upload_date
  </sql>
  <select id="selectByExample" parameterType="com.example.file_server.entity.UploadFileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upload_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from upload_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from upload_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.file_server.entity.UploadFileExample">
    delete from upload_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.file_server.entity.UploadFile">
    insert into upload_file (id, file_unique_name, file_original_name, 
      file_size, file_type, file_path, 
      file_tags, file_category, file_upload_date
      )
    values (#{id,jdbcType=INTEGER}, #{fileUniqueName,jdbcType=VARCHAR}, #{fileOriginalName,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=BIGINT}, #{fileType,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, 
      #{fileTags,jdbcType=VARCHAR}, #{fileCategory,jdbcType=VARCHAR}, #{fileUploadDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.file_server.entity.UploadFile">
    insert into upload_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fileUniqueName != null">
        file_unique_name,
      </if>
      <if test="fileOriginalName != null">
        file_original_name,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="fileTags != null">
        file_tags,
      </if>
      <if test="fileCategory != null">
        file_category,
      </if>
      <if test="fileUploadDate != null">
        file_upload_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileUniqueName != null">
        #{fileUniqueName,jdbcType=VARCHAR},
      </if>
      <if test="fileOriginalName != null">
        #{fileOriginalName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileTags != null">
        #{fileTags,jdbcType=VARCHAR},
      </if>
      <if test="fileCategory != null">
        #{fileCategory,jdbcType=VARCHAR},
      </if>
      <if test="fileUploadDate != null">
        #{fileUploadDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.file_server.entity.UploadFileExample" resultType="java.lang.Long">
    select count(*) from upload_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update upload_file
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fileUniqueName != null">
        file_unique_name = #{record.fileUniqueName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileOriginalName != null">
        file_original_name = #{record.fileOriginalName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=BIGINT},
      </if>
      <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileTags != null">
        file_tags = #{record.fileTags,jdbcType=VARCHAR},
      </if>
      <if test="record.fileCategory != null">
        file_category = #{record.fileCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.fileUploadDate != null">
        file_upload_date = #{record.fileUploadDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update upload_file
    set id = #{record.id,jdbcType=INTEGER},
      file_unique_name = #{record.fileUniqueName,jdbcType=VARCHAR},
      file_original_name = #{record.fileOriginalName,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=BIGINT},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      file_tags = #{record.fileTags,jdbcType=VARCHAR},
      file_category = #{record.fileCategory,jdbcType=VARCHAR},
      file_upload_date = #{record.fileUploadDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.file_server.entity.UploadFile">
    update upload_file
    <set>
      <if test="fileUniqueName != null">
        file_unique_name = #{fileUniqueName,jdbcType=VARCHAR},
      </if>
      <if test="fileOriginalName != null">
        file_original_name = #{fileOriginalName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileTags != null">
        file_tags = #{fileTags,jdbcType=VARCHAR},
      </if>
      <if test="fileCategory != null">
        file_category = #{fileCategory,jdbcType=VARCHAR},
      </if>
      <if test="fileUploadDate != null">
        file_upload_date = #{fileUploadDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.file_server.entity.UploadFile">
    update upload_file
    set file_unique_name = #{fileUniqueName,jdbcType=VARCHAR},
      file_original_name = #{fileOriginalName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_tags = #{fileTags,jdbcType=VARCHAR},
      file_category = #{fileCategory,jdbcType=VARCHAR},
      file_upload_date = #{fileUploadDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByExample2" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upload_file
    <if test="_parameter != null and example != null">
      <where>
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="pageStart != null and pageLimit != null">
      limit #{pageStart},#{pageLimit}
    </if>
  </select>
</mapper>
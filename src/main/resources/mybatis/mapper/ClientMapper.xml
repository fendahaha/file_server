<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.file_server.mapper.ClientMapper">
  <resultMap id="BaseResultMap" type="com.example.file_server.entity.Client">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_uuid" jdbcType="VARCHAR" property="userUuid" />
    <result column="client_uuid" jdbcType="VARCHAR" property="clientUuid" />
    <result column="client_leavel" jdbcType="INTEGER" property="clientLeavel" />
    <result column="client_money" jdbcType="INTEGER" property="clientMoney" />
    <result column="client_money_sended" jdbcType="INTEGER" property="clientMoneySended" />
    <result column="client_money_recharged" jdbcType="INTEGER" property="clientMoneyRecharged" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_uuid, client_uuid, client_leavel, client_money, client_money_sended, client_money_recharged, 
    create_at
  </sql>
  <select id="selectByExample" parameterType="com.example.file_server.entity.ClientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from client
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from client
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from client
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.file_server.entity.ClientExample">
    delete from client
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.file_server.entity.Client">
    insert into client (id, user_uuid, client_uuid, 
      client_leavel, client_money, client_money_sended, 
      client_money_recharged, create_at)
    values (#{id,jdbcType=INTEGER}, #{userUuid,jdbcType=VARCHAR}, #{clientUuid,jdbcType=VARCHAR}, 
      #{clientLeavel,jdbcType=INTEGER}, #{clientMoney,jdbcType=INTEGER}, #{clientMoneySended,jdbcType=INTEGER}, 
      #{clientMoneyRecharged,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.file_server.entity.Client">
    insert into client
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userUuid != null">
        user_uuid,
      </if>
      <if test="clientUuid != null">
        client_uuid,
      </if>
      <if test="clientLeavel != null">
        client_leavel,
      </if>
      <if test="clientMoney != null">
        client_money,
      </if>
      <if test="clientMoneySended != null">
        client_money_sended,
      </if>
      <if test="clientMoneyRecharged != null">
        client_money_recharged,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userUuid != null">
        #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="clientUuid != null">
        #{clientUuid,jdbcType=VARCHAR},
      </if>
      <if test="clientLeavel != null">
        #{clientLeavel,jdbcType=INTEGER},
      </if>
      <if test="clientMoney != null">
        #{clientMoney,jdbcType=INTEGER},
      </if>
      <if test="clientMoneySended != null">
        #{clientMoneySended,jdbcType=INTEGER},
      </if>
      <if test="clientMoneyRecharged != null">
        #{clientMoneyRecharged,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.file_server.entity.ClientExample" resultType="java.lang.Long">
    select count(*) from client
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update client
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userUuid != null">
        user_uuid = #{record.userUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.clientUuid != null">
        client_uuid = #{record.clientUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.clientLeavel != null">
        client_leavel = #{record.clientLeavel,jdbcType=INTEGER},
      </if>
      <if test="record.clientMoney != null">
        client_money = #{record.clientMoney,jdbcType=INTEGER},
      </if>
      <if test="record.clientMoneySended != null">
        client_money_sended = #{record.clientMoneySended,jdbcType=INTEGER},
      </if>
      <if test="record.clientMoneyRecharged != null">
        client_money_recharged = #{record.clientMoneyRecharged,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update client
    set id = #{record.id,jdbcType=INTEGER},
      user_uuid = #{record.userUuid,jdbcType=VARCHAR},
      client_uuid = #{record.clientUuid,jdbcType=VARCHAR},
      client_leavel = #{record.clientLeavel,jdbcType=INTEGER},
      client_money = #{record.clientMoney,jdbcType=INTEGER},
      client_money_sended = #{record.clientMoneySended,jdbcType=INTEGER},
      client_money_recharged = #{record.clientMoneyRecharged,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.file_server.entity.Client">
    update client
    <set>
      <if test="userUuid != null">
        user_uuid = #{userUuid,jdbcType=VARCHAR},
      </if>
      <if test="clientUuid != null">
        client_uuid = #{clientUuid,jdbcType=VARCHAR},
      </if>
      <if test="clientLeavel != null">
        client_leavel = #{clientLeavel,jdbcType=INTEGER},
      </if>
      <if test="clientMoney != null">
        client_money = #{clientMoney,jdbcType=INTEGER},
      </if>
      <if test="clientMoneySended != null">
        client_money_sended = #{clientMoneySended,jdbcType=INTEGER},
      </if>
      <if test="clientMoneyRecharged != null">
        client_money_recharged = #{clientMoneyRecharged,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.file_server.entity.Client">
    update client
    set user_uuid = #{userUuid,jdbcType=VARCHAR},
      client_uuid = #{clientUuid,jdbcType=VARCHAR},
      client_leavel = #{clientLeavel,jdbcType=INTEGER},
      client_money = #{clientMoney,jdbcType=INTEGER},
      client_money_sended = #{clientMoneySended,jdbcType=INTEGER},
      client_money_recharged = #{clientMoneyRecharged,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
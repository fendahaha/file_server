<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.file_server.mapper.GiftMapper">
  <resultMap id="BaseResultMap" type="com.example.file_server.entity.Gift">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gift_uuid" jdbcType="VARCHAR" property="giftUuid" />
    <result column="gift_name" jdbcType="VARCHAR" property="giftName" />
    <result column="gift_value" jdbcType="INTEGER" property="giftValue" />
    <result column="gift_image" jdbcType="VARCHAR" property="giftImage" />
    <result column="gift_order" jdbcType="INTEGER" property="giftOrder" />
    <result column="gift_create_at" jdbcType="TIMESTAMP" property="giftCreateAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gift_uuid, gift_name, gift_value, gift_image, gift_order, gift_create_at
  </sql>
  <select id="selectByExample" parameterType="com.example.file_server.entity.GiftExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>


  <select id="selectByExample2" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gift
    <if test="_parameter != null and example != null">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
      <if test="pageStart != null and pageLimit != null">
        limit #{pageStart},#{pageLimit}
      </if>
  </select>

  <select id="selectCount" parameterType="com.example.file_server.entity.GiftExample" resultType="int">
      select
      <if test="distinct">
          distinct
      </if>
      count(*)
      from gift
      <if test="_parameter != null">
          <include refid="Example_Where_Clause"/>
      </if>
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from gift
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gift
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.file_server.entity.GiftExample">
    delete from gift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.file_server.entity.Gift">
    insert into gift (id, gift_uuid, gift_name,
      gift_value, gift_image, gift_order,
      gift_create_at)
    values (#{id,jdbcType=INTEGER}, #{giftUuid,jdbcType=VARCHAR}, #{giftName,jdbcType=VARCHAR},
      #{giftValue,jdbcType=INTEGER}, #{giftImage,jdbcType=VARCHAR}, #{giftOrder,jdbcType=INTEGER},
      #{giftCreateAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.file_server.entity.Gift">
    insert into gift
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="giftUuid != null">
        gift_uuid,
      </if>
      <if test="giftName != null">
        gift_name,
      </if>
      <if test="giftValue != null">
        gift_value,
      </if>
      <if test="giftImage != null">
        gift_image,
      </if>
      <if test="giftOrder != null">
        gift_order,
      </if>
      <if test="giftCreateAt != null">
        gift_create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="giftUuid != null">
        #{giftUuid,jdbcType=VARCHAR},
      </if>
      <if test="giftName != null">
        #{giftName,jdbcType=VARCHAR},
      </if>
      <if test="giftValue != null">
        #{giftValue,jdbcType=INTEGER},
      </if>
      <if test="giftImage != null">
        #{giftImage,jdbcType=VARCHAR},
      </if>
      <if test="giftOrder != null">
        #{giftOrder,jdbcType=INTEGER},
      </if>
      <if test="giftCreateAt != null">
        #{giftCreateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.file_server.entity.GiftExample" resultType="java.lang.Long">
    select count(*) from gift
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gift
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.giftUuid != null">
        gift_uuid = #{record.giftUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.giftName != null">
        gift_name = #{record.giftName,jdbcType=VARCHAR},
      </if>
      <if test="record.giftValue != null">
        gift_value = #{record.giftValue,jdbcType=INTEGER},
      </if>
      <if test="record.giftImage != null">
        gift_image = #{record.giftImage,jdbcType=VARCHAR},
      </if>
      <if test="record.giftOrder != null">
        gift_order = #{record.giftOrder,jdbcType=INTEGER},
      </if>
      <if test="record.giftCreateAt != null">
        gift_create_at = #{record.giftCreateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gift
    set id = #{record.id,jdbcType=INTEGER},
      gift_uuid = #{record.giftUuid,jdbcType=VARCHAR},
      gift_name = #{record.giftName,jdbcType=VARCHAR},
      gift_value = #{record.giftValue,jdbcType=INTEGER},
      gift_image = #{record.giftImage,jdbcType=VARCHAR},
      gift_order = #{record.giftOrder,jdbcType=INTEGER},
      gift_create_at = #{record.giftCreateAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.file_server.entity.Gift">
    update gift
    <set>
      <if test="giftUuid != null">
        gift_uuid = #{giftUuid,jdbcType=VARCHAR},
      </if>
      <if test="giftName != null">
        gift_name = #{giftName,jdbcType=VARCHAR},
      </if>
      <if test="giftValue != null">
        gift_value = #{giftValue,jdbcType=INTEGER},
      </if>
      <if test="giftImage != null">
        gift_image = #{giftImage,jdbcType=VARCHAR},
      </if>
      <if test="giftOrder != null">
        gift_order = #{giftOrder,jdbcType=INTEGER},
      </if>
      <if test="giftCreateAt != null">
        gift_create_at = #{giftCreateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.file_server.entity.Gift">
    update gift
    set gift_uuid = #{giftUuid,jdbcType=VARCHAR},
      gift_name = #{giftName,jdbcType=VARCHAR},
      gift_value = #{giftValue,jdbcType=INTEGER},
      gift_image = #{giftImage,jdbcType=VARCHAR},
      gift_order = #{giftOrder,jdbcType=INTEGER},
      gift_create_at = #{giftCreateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>